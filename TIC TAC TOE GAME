def print_board(board):
    print("\n")
    for i in range(3):
        print(" | ".join(board[i]))
        if i < 2:
            print("--+---+--")
    print("\n")

def check_winner(board, player):
    # Rows, Columns and Diagonals
    for i in range(3):
        if all(cell == player for cell in board[i]):  # Check rows
            return True
        if all(board[j][i] == player for j in range(3)):  # Check columns
            return True
    if all(board[i][i] == player for i in range(3)):  # Diagonal top-left to bottom-right
        return True
    if all(board[i][2 - i] == player for i in range(3)):  # Diagonal top-right to bottom-left
        return True
    return False

def is_draw(board):
    return all(cell != ' ' for row in board for cell in row)

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = 'X'

    print("Welcome to Tic-Tac-Toe!\n")
    print("Player 1 is X, Player 2 is O")
    print_board(board)

    while True:
        try:
            move = input(f"Player {current_player}, enter your move (row and column: 1 1 for top-left): ")
            row, col = map(int, move.split())
            row -= 1
            col -= 1

            if row not in range(3) or col not in range(3):
                print("Invalid input. Please enter row and column between 1 and 3.")
                continue

            if board[row][col] != ' ':
                print("That spot is already taken. Choose another.")
                continue

            board[row][col] = current_player
            print_board(board)

            if check_winner(board, current_player):
                print(f"ðŸŽ‰ Player {current_player} wins!")
                break

            if is_draw(board):
                print("It's a draw!")
                break

            current_player = 'O' if current_player == 'X' else 'X'

        except ValueError:
            print("Invalid format. Please enter two numbers separated by space (e.g., 1 1).")

if __name__ == "__main__":
    play_game()

